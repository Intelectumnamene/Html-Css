Claro! Vamos explicar o código CSS com comentários para que cada linha fique clara em seu propósito. Aqui está a versão comentada do seu código:

```css
/* Estilo para o elemento <nav> */
nav {
    display: flex; /* Define o layout como flexível, permitindo alinhar itens em linha */
    flex-wrap: wrap; /* Permite que os itens quebrem para a próxima linha se não houver espaço suficiente */
}

/* Estilo para o botão de menu (hambúrguer) */
.nav-toggle {
    display: none; /* Oculta o botão de menu por padrão; será exibido em telas pequenas */
}

/* Estilos que se aplicam a telas com largura máxima de 768 pixels */
@media (max-width: 768px) {
    .nav-toggle {
        display: inline-block; /* Exibe o botão como um bloco inline, permitindo que ele apareça na tela */
        cursor: pointer; /* Muda o cursor para uma mãozinha ao passar sobre o botão, indicando que é clicável */
    }

    nav ul {
        display: none; /* Oculta a lista de navegação por padrão em telas pequenas */
        flex-direction: column; /* Alinha os itens da lista verticalmente em vez de horizontalmente */
        width: 100%; /* Define a largura da lista para ocupar 100% do espaço disponível */
    }

    nav ul.show {
        display: flex; /* Exibe a lista como um layout flexível quando a classe 'show' é adicionada */
    }
}
```

### Explicação Geral

- **`nav { ... }`**: Define as propriedades para a barra de navegação, utilizando flexbox para alinhar itens horizontalmente e permitir que eles quebrem para a próxima linha conforme necessário.

- **`.nav-toggle { ... }`**: Inicialmente oculta o botão que será usado para abrir a navegação em dispositivos móveis, garantindo que ele não apareça em telas maiores.

- **`@media (max-width: 768px) { ... }`**: Início de uma consulta de mídia que aplica estilos específicos quando a largura da tela é igual ou inferior a 768 pixels, permitindo uma adaptação do layout para dispositivos móveis.

- **`nav ul { ... }`**: Define como a lista de navegação deve ser exibida em telas menores, ocultando-a inicialmente e mudando seu layout para uma coluna.

- **`nav ul.show { ... }`**: Quando a classe `show` é adicionada à lista, ela é exibida novamente como uma lista flexível, permitindo que os itens sejam mostrados verticalmente.

Esses comentários ajudam a entender a intenção e a funcionalidade de cada parte do código CSS. Se precisar de mais detalhes ou ajuda em outra parte do código, é só avisar!